# Merlin AI Router Daemon Configuration
# This file contains configuration for the Merlin systemd service
# Copy this to /etc/merlin/merlin.conf after installation

[service]
# Service mode: Hybrid, HttpServer, or CliDaemon
mode = "Hybrid"

# HTTP server configuration
http_port = 4242
bind_address = "0.0.0.0"
enable_metrics = true
request_timeout_seconds = 30

# Logging configuration
log_level = "Info"
enable_structured_logging = true
log_to_journal = true

# Performance settings
max_connections = 1000
worker_threads = 4
buffer_size = 8192

[storage]
# Feature storage configuration
storage_path = "/var/lib/merlin/features.json"
backup_enabled = true
backup_interval_hours = 24
max_backups = 7

# Cache configuration
cache_enabled = true
cache_size_mb = 64
cache_ttl_minutes = 30

[routing]
# Model routing configuration
default_provider = "openai"
enable_ab_testing = true
enable_model_selection = true

# Performance optimization
enable_caching = true
prefetch_enabled = true
batch_requests = false

[security]
# Security settings
enable_authentication = false
api_key_required = false
rate_limit_requests_per_minute = 60

# CORS configuration
allow_origins = ["*"]
allow_methods = ["GET", "POST", "PUT", "DELETE"]
allow_headers = ["Content-Type", "Authorization"]

[monitoring]
# Health and monitoring configuration
health_check_enabled = true
health_check_interval_seconds = 30
metrics_enabled = true
metrics_port = 9090

# Service discovery
discovery_enabled = false
discovery_service_name = "merlin"

[network]
# Network configuration
enable_ipv6 = true
connection_timeout_seconds = 10
read_timeout_seconds = 30
write_timeout_seconds = 30

# SSL/TLS configuration (when enabled)
ssl_enabled = false
ssl_cert_path = "/etc/merlin/cert.pem"
ssl_key_path = "/etc/merlin/key.pem"

[redis]
# Redis configuration (optional)
enabled = false
host = "localhost"
port = 6379
database = 0
password = ""
connection_pool_size = 5

# Key prefixes
features_key_prefix = "merlin:features:"
cache_key_prefix = "merlin:cache:"
metrics_key_prefix = "merlin:metrics:"

[development]
# Development settings (only used in development mode)
debug_mode = false
verbose_logging = false
enable_profiling = false
test_mode = false

# Feature flags
enable_experimental_features = false
enable_debug_endpoints = false
enable_admin_api = false

[integration]
# External service integrations
openai_api_key = ""  # Set via environment variable
anthropic_api_key = ""  # Set via environment variable

# Feature integration
enable_feature_numbering = true
enable_preferences = true
enable_feedback = true

# Logging integration
log_to_external_service = false
external_log_endpoint = ""

[systemd]
# Systemd-specific configuration
notify_socket = "/run/systemd/notify"
watchdog_enabled = false
watchdog_interval_seconds = 30

# Service lifecycle
graceful_shutdown_timeout_seconds = 10
force_kill_timeout_seconds = 5

# Resource monitoring
enable_resource_monitoring = true
resource_monitoring_interval_seconds = 60

[maintenance]
# Maintenance and cleanup settings
auto_cleanup_enabled = true
cleanup_interval_hours = 24
log_retention_days = 30
feature_retention_days = 90

# Health check thresholds
memory_usage_warning_percent = 80
memory_usage_critical_percent = 95
cpu_usage_warning_percent = 80
cpu_usage_critical_percent = 95
disk_usage_warning_percent = 80
disk_usage_critical_percent = 90

[upgrades]
# Upgrade and deployment settings
auto_upgrade_enabled = false
upgrade_check_interval_hours = 24
backup_before_upgrade = true

# Rollback configuration
auto_rollback_enabled = false
rollback_timeout_minutes = 30

# Compatibility
min_compatible_version = "0.1.0"
max_compatible_version = "0.2.0"